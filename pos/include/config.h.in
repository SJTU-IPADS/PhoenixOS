#pragma once

#include <iostream>
#include <string>

#include "pos/include/common.h"
#include "pos/include/log.h"

/*!
 *  \brief  hard-coded configurations of PhoenixOS
 */

// TSC frequency
// #define POS_TSC_FREQ 2200000000 // Hz
#define POS_TSC_FREQ                    @pos_tsc_freq@ // Hz

// checkpoint optimization level
#define POS_CKPT_OPT_LEVAL              @pos_ckpt_opt_level@

// checkpoint interval (unit in ms)
#define POS_CKPT_INTERVAL               @pos_ckpt_interval_ms@ // ms

// path to output log file
#define POS_LOG_FILE_PATH               "@pos_log_file_path@"

// prefill scale to the POS DAG
#define POS_NB_PREFILL_DAG_VERTEX               65536 // 1 << 16
#define POS_NB_PREFILL_DAG_VERTEX_NEIGHBOR      65536 // 1 << 16

typedef struct pos_global_config_server {
    std::string job_name;

    std::string kernel_meta_path;
    bool is_load_kernel_from_cache;

    std::string checkpoint_file_path;
    bool is_starting_with_checkpoint;

    pos_global_config_server() : is_load_kernel_from_cache(false) {}
} pos_global_config_server_t;

extern pos_global_config_server_t pos_gconfig_server;
