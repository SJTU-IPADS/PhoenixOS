# Copyright 2025 The PhoenixOS Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CUDA: 11.3
# Type: Execution Control
# Docs: https://docs.nvidia.com/cuda/archive/11.3.0/cuda-runtime-api/group__CUDART__EXECUTION.html#group__CUDART__EXECUTION

header_file_name: "cuda_runtime_api.h"
dependent_headers:
  - "cuda_runtime_api.h"
  - "cuda.h"
successful_retval: "cudaSuccess"
apis:
  # cudaError_t cudaFuncGetAttributes ( cudaFuncAttributes* attr, const void* func )
  - name: "cudaFuncGetAttributes"
    index: 230
    supported: true
    parent_name: "cudaFuncGetAttributes"
    parser_type: "default"
    worker_type: "customized"
    is_sync: true
    # parser
    type: "get_resource"
    create_edges:
    delete_edges:
    in_edges:
      - param_index: 2
        handle_type: "cuda_function"
        handle_source: "from_param"
    out_edges:
    inout_edges:
    # worker
    involve_membus: false
    need_stream_sync: false
    constant_params:

  # cudaError_t cudaFuncSetAttribute ( const void* func, cudaFuncAttribute attr, int value )
  - name: "cudaFuncSetAttribute"
    index: 231
    supported: false

  # cudaError_t cudaFuncSetCacheConfig ( const void* func, cudaFuncCache cacheConfig )
  - name: "cudaFuncSetCacheConfig"
    index: 232
    supported: false

  # cudaError_t cudaFuncSetSharedMemConfig ( const void* func, cudaSharedMemConfig config )
  - name: "cudaFuncSetSharedMemConfig"
    index: 233
    supported: false

  # void* cudaGetParameterBuffer ( size_t alignment, size_t size )
  - name: "cudaGetParameterBuffer"
    index: 234
    supported: false

  # void* cudaGetParameterBufferV2 ( void* func, dim3 gridDimension, dim3 blockDimension, unsigned int sharedMemSize )
  - name: "cudaGetParameterBufferV2"
    index: 235
    supported: false

  # cudaError_t cudaLaunchCooperativeKernel ( const void* func, dim3 gridDim, dim3 blockDim, void** args, size_t sharedMem, cudaStream_t stream )
  - name: "cudaLaunchCooperativeKernel"
    index: 236
    supported: false

  # cudaError_t cudaLaunchCooperativeKernelMultiDevice ( cudaLaunchParams* launchParamsList, unsigned int numDevices, unsigned int flags = 0 )
  - name: "cudaLaunchCooperativeKernelMultiDevice"
    index: 237
    supported: false

  # cudaError_t cudaLaunchHostFunc ( cudaStream_t stream, cudaHostFn_t fn, void* userData )
  - name: "cudaLaunchHostFunc"
    index: 238
    supported: false

  # cudaError_t cudaLaunchKernel ( const void* func, dim3 gridDim, dim3 blockDim, void** args, size_t sharedMem, cudaStream_t stream )
  - name: "cudaLaunchKernel"
    index: 239
    supported: true
    parent_name: "cudaLaunchKernel"
    parser_type: "customized"
    worker_type: "customized"
    is_sync: false
    # parser
    type: "set_resource"
    create_edges:
    delete_edges:
    in_edges:
    out_edges:
    inout_edges:
    # worker
    involve_membus: false
    need_stream_sync: false
    constant_params:

  # cudaError_t cudaSetDoubleForDevice ( double* d )
  - name: "cudaSetDoubleForDevice"
    index: 240
    supported: false

  # cudaError_t cudaSetDoubleForHost ( double* d )
  - name: "cudaSetDoubleForHost"
    index: 241
    supported: false
